{"version":3,"sources":["components/ContactRow.js","components/ContactsBanner.js","components/CreateContact.js","components/FavoriteSection.js","components/Table.js","App.js","reportWebVitals.js","index.js","CSS/styles.module.css"],"names":["ContactRow","props","contact","name","phone","email","type","checked","favorite","onChange","toggleFavorite","className","styles","buttonDelete","onClick","delete","ContactsBanner","contactItems","CreateContact","initialValues","id","uuid","useState","data","setData","handleInputChange","e","target","value","containerForm","onSubmit","preventDefault","callback","reset","form","htmlFor","placeholder","FavoriteSection","containerFavoriteSection","isChecked","Table","containerTable","function","App","favoriteValue","setfavorite","setContactItems","map","c","deleteContact","contactName","removeContact","filter","alert","useEffect","localStorage","getItem","JSON","parse","setItem","stringify","container","length","contactPhone","contactEmail","find","t","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.f294ec53.chunk.js","sourcesContent":["import React from 'react';\r\nimport styles from '../CSS/styles.module.css';\r\n\r\n\r\nconst ContactRow = (props) => {\r\n    return(\r\n        <tr key={props.contact.name}>\r\n            <td>{props.contact.name}</td>\r\n            <td>{props.contact.phone}</td>\r\n            <td>{props.contact.email}</td>\r\n            <td>\r\n                <input \r\n                    type=\"checkbox\" \r\n                    checked={props.contact.favorite} \r\n                    onChange={() => props.toggleFavorite(props.contact)}/>\r\n            </td>\r\n            {/* <td><button className={styles.buttonEdit} onClick={()=> props.edit(props.openModal)}><i className=\"fas fa-user-edit\"></i></button></td> */}\r\n            <td><button className={styles.buttonDelete} onClick={() => props.delete(props.contact.name)}><i className=\"far fa-trash-alt\"></i></button></td>\r\n        </tr>\r\n       )\r\n}\r\n \r\nexport default ContactRow;","import React from 'react';\r\n\r\nconst ContactsBanner = (props) => {\r\n    return ( \r\n        <header>\r\n            <h2>Libreta de contactos</h2>\r\n            <h5>Total de contactos: {props.contactItems}</h5>\r\n        </header>\r\n     );\r\n}\r\n \r\nexport default ContactsBanner;","import React, {useState} from 'react';\r\nimport styles from '../CSS/styles.module.css'\r\nimport uuid from 'react-uuid'\r\n\r\nconst CreateContact = (props) => {\r\n\r\n    const initialValues = {\r\n        name: '',\r\n        phone: 0,\r\n        email: '', \r\n        id : uuid()\r\n    }\r\n\r\n    const [data, setData] = useState(initialValues)\r\n\r\n    const handleInputChange = (e) => {\r\n        setData({\r\n            ...data,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n        const handleSubmit = (e) => {\r\n            e.preventDefault();\r\n            props.callback(data.name, data.phone, data.email, data.id)\r\n            e.target.reset()\r\n        }\r\n\r\n    return ( <div className= {styles.containerForm}>\r\n                <form onSubmit={handleSubmit} className= {styles.form}>\r\n                <label htmlFor=\"Favorite\">Nombre Completo</label>\r\n                    <input\r\n                    type=\"text\"\r\n                    onChange={handleInputChange}\r\n                    placeholder=\"Ej. Juanito Perez\"\r\n                    name= \"name\"\r\n                />\r\n                <label htmlFor=\"Favorite\">Telefono</label>\r\n                <input\r\n                    type=\"tel\"\r\n                    onChange={handleInputChange}\r\n                    placeholder=\"Ej. 0000000\"\r\n                    name= \"phone\"\r\n                />\r\n                <label htmlFor=\"Favorite\">Email</label>\r\n                <input\r\n                    type=\"email\"\r\n                    onChange={handleInputChange}\r\n                    placeholder=\"Ej. juanito@example.com\"\r\n                    name=\"email\"\r\n                />\r\n                <button type=\"submit\">AÃ±adir nuevo contacto</button>\r\n                </form>\r\n            </div> );\r\n}\r\n \r\nexport default CreateContact;","import React from 'react';\r\nimport styles from '../CSS/styles.module.css';\r\n\r\nconst FavoriteSection = (props) => {\r\n    return ( \r\n    <div className={styles.containerFavoriteSection}>\r\n        <label htmlFor=\"Favorite\">Ver mis contactos favoritos</label>\r\n        <input\r\n        type=\"checkbox\"\r\n        checked= {props.isChecked}\r\n        onChange= {e => props.callback(e.target.checked)}\r\n        />\r\n    </div> );\r\n}\r\n \r\nexport default FavoriteSection;","import React from 'react';\r\nimport styles from '../CSS/styles.module.css'\r\n\r\n\r\nconst Table = (props) => {\r\n    return (   \r\n    <table className= {styles.containerTable}>\r\n        <thead>\r\n        <tr>\r\n            <th>Nombre Completo</th>\r\n            <th>Telefono</th>\r\n            <th>Email</th>\r\n            <th>Favorito</th>\r\n            <th>Borrar</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {props.function}\r\n        </tbody>\r\n    </table>);\r\n}\r\n \r\nexport default Table;","import React, {useState, useEffect} from 'react';\r\nimport styles from './CSS/styles.module.css';\r\nimport ContactRow from './components/ContactRow';\r\nimport ContactsBanner from './components/ContactsBanner';\r\nimport CreateContact from './components/CreateContact';\r\nimport FavoriteSection from './components/FavoriteSection';\r\nimport Table from './components/Table';\r\nimport uuid from 'react-uuid'\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n  const [favorite, setfavorite] = useState(false)\r\n  const [contactItems, setContactItems] = useState([{\r\n    name: \"Julian Fonseca\",\r\n    phone: 0,\r\n    email: \"juli@gmail.com\",\r\n    favorite: false,\r\n    id: uuid()\r\n  },{\r\n    name: \"Andres Sanchez\",\r\n    phone: 1,\r\n    email: \"andres@gmail.com\",\r\n    favorite: true, \r\n    id: uuid()\r\n  }\r\n])\r\n\r\n\r\nconst createNewContact = (contactName, contactPhone, contactEmail) => {\r\n  if(!contactItems.find(t => t.phone === contactPhone)){\r\n    setContactItems([...contactItems, {\r\n      name: contactName, \r\n      phone: contactPhone,\r\n      email: contactEmail,\r\n      favorite: false, \r\n      id: uuid()\r\n    }])\r\n  }else{ \r\n    alert(\"El numero registrado ya existe en su libreta de contactos\")\r\n  }\r\n}\r\n\r\n\r\nconst toggleFavorite = (contact) => \r\nsetContactItems(contactItems.map(\r\n  c => (c.name === contact.name ? {...c,favorite: !c.favorite} : c)\r\n))\r\n\r\nconst deleteContact = contactName => {\r\n  const removeContact = [...contactItems].filter(contact => contact.name !== contactName)\r\n  alert(\"Se eliminara tu contacto\")\r\n  setContactItems(removeContact)\r\n  }\r\n\r\n\r\nconst contactTableRowsFavorite = (favoriteValue) => \r\n contactItems\r\n .filter(contact => contact.favorite === favoriteValue)\r\n .map(contact => (\r\n   <ContactRow\r\n   key= {contact.name}\r\n   contact = {contact}\r\n   toggleFavorite={toggleFavorite}\r\n   delete = {deleteContact}\r\n   />\r\n ))\r\n\r\n const contactTableRows = () => \r\n contactItems.map(contact => (\r\n   <ContactRow\r\n   key= {contact.name}\r\n   contact = {contact}\r\n   toggleFavorite={toggleFavorite}\r\n   delete = {deleteContact}\r\n   />\r\n ))\r\n\r\n\r\n\r\n\r\n\r\n useEffect(()=> {\r\n   let data = localStorage.getItem(\"contacts\")\r\n   if(data != null){\r\n     setContactItems(JSON.parse(data))\r\n   }else{\r\n     setContactItems([\r\n      {\r\n        name: \"Julian Fonseca example\",\r\n        phone: 0,\r\n        email: \"juli@gmail.com\",\r\n        favorite: false, \r\n        id:uuid()\r\n      },{\r\n        name: \"Andres Sanchez example\",\r\n        phone: 1,\r\n        email: \"andres@gmail.com\",\r\n        favorite: true, \r\n        id: uuid()\r\n      }\r\n     ])\r\n     setfavorite(true)\r\n   }\r\n }, [])\r\n\r\n\r\n useEffect(() => {\r\n   localStorage.setItem('contacts', JSON.stringify(contactItems))\r\n }, [contactItems])\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className= {styles.container}>\r\n      <ContactsBanner contactItems= {contactItems.length}/>\r\n      <CreateContact \r\n         callback = {createNewContact}\r\n         />\r\n      <Table function = {contactTableRows()}/>\r\n      <div>\r\n        <FavoriteSection\r\n        isChecked = {favorite}\r\n        callback = {checked => setfavorite(checked)}\r\n        />\r\n      </div>\r\n\r\n      {\r\n        favorite && (\r\n         <Table function = {contactTableRowsFavorite(true)}/>\r\n        )\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n// const edit = (contactName, contactPhone, contactEmail, contactId) => {\r\n//  let update = contactItems\r\n//  update.map(item => {\r\n//    if(item.id === contactId){\r\n//      item.name = contactName;\r\n//      item.phone = contactPhone;\r\n//    }\r\n//  })\r\n//  setContactItems(update)\r\n// }\r\n\r\n// console.log(contactItems)","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__3zGLV\",\"containerForm\":\"styles_containerForm__vnm31\",\"form\":\"styles_form__2KQW_\",\"containerTable\":\"styles_containerTable__1904V\",\"containerFavoriteSection\":\"styles_containerFavoriteSection__1qspN\",\"buttonEdit\":\"styles_buttonEdit__3WswW\",\"buttonDelete\":\"styles_buttonDelete__3AFHu\"};"],"sourceRoot":""}